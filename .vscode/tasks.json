{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Create virtual environment and install dependencies",
            "type": "shell",
            "command": "C:\\Users\\cheer\\AppData\\Local\\Programs\\Python\\Python313\\python.exe -m venv .venv && .venv\\Scripts\\activate && python -m pip install poetry && poetry install",
            "options": {
                "shell": {
                    "executable": "cmd.exe",
                    "args": [
                        "/c"
                    ]
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Run Pylint",
            "type": "shell",
            "command": "poetry run pylint my_python_project tests",
            "options": {
                "shell": {
                    "executable": "cmd.exe",
                    "args": [
                        "/c"
                    ]
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Run Mypy",
            "type": "shell",
            "command": "poetry run mypy my_python_project",
            "options": {
                "shell": {
                    "executable": "cmd.exe",
                    "args": [
                        "/c"
                    ]
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Run Flake8",
            "type": "shell",
            "command": "poetry run flake8 my_python_project tests",
            "options": {
                "shell": {
                    "executable": "cmd.exe",
                    "args": [
                        "/c"
                    ]
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Run Black",
            "type": "shell",
            "command": "poetry run black my_python_project tests",
            "options": {
                "shell": {
                    "executable": "cmd.exe",
                    "args": [
                        "/c"
                    ]
                }
            },
            "problemMatcher": []
        }
    ]
}